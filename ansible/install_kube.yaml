---
- hosts: all
  become: true
  vars:
    kubernetes_version: "1.31"

  tasks:
    - name: Update apt cache
      apt:
        update_cache: yes

    - name: Disable swap
      command: swapoff -a

    - name: Comment out swap in fstab
      replace:
        path: /etc/fstab
        regexp: '^([^#].*\sswap\s.*)$'
        replace: '# \1'

    - name: Load kernel modules for containerd
      copy:
        dest: /etc/modules-load.d/containerd.conf
        content: |
          overlay
          br_netfilter

    - name: Enable kernel modules immediately
      modprobe:
        name: '{{ item }}'
      loop:
        - overlay
        - br_netfilter

    - name: Set sysctl parameters for Kubernetes
      copy:
        dest: /etc/sysctl.d/kubernetes.conf
        content: |
          net.bridge.bridge-nf-call-ip6tables = 1
          net.bridge.bridge-nf-call-iptables = 1
          net.ipv4.ip_forward = 1

    - name: Apply sysctl settings
      command: sysctl --system

    - name: Install prerequisite packages
      apt:
        name:
          - curl
          - gnupg2
          - software-properties-common
          - apt-transport-https
          - ca-certificates
          - nfs-common
        state: present

    - name: Add Docker GPG key
      apt_key:
        url: https://download.docker.com/linux/ubuntu/gpg
        state: present

    - name: Add Docker repository
      apt_repository:
        repo: "deb [arch=amd64] https://download.docker.com/linux/ubuntu {{ ansible_distribution_release }} stable"
        state: present

    - name: Install containerd
      apt:
        name: containerd.io
        state: present
        update_cache: yes

    - name: Generate containerd config
      command: containerd config default
      register: containerd_default

    - name: Write containerd config with SystemdCgroup
      copy:
        dest: /etc/containerd/config.toml
        content: "{{ containerd_default.stdout | regex_replace('SystemdCgroup = false', 'SystemdCgroup = true') }}"

    - name: Restart and enable containerd
      systemd:
        name: containerd
        state: restarted
        enabled: yes

    - name: Create Kubernetes apt keyring directory
      file:
        path: /etc/apt/keyrings
        state: directory

    - name: Add Kubernetes GPG key
      get_url:
        url: https://pkgs.k8s.io/core:/stable:/v{{ kubernetes_version }}/deb/Release.key
        dest: /tmp/kubernetes-apt-keyring.asc

    - name: Convert Kubernetes key
      command: gpg --dearmor -o /etc/apt/keyrings/kubernetes-apt-keyring.gpg /tmp/kubernetes-apt-keyring.asc

    - name: Add Kubernetes repository
      apt_repository:
        repo: "deb [signed-by=/etc/apt/keyrings/kubernetes-apt-keyring.gpg] https://pkgs.k8s.io/core:/stable:/v{{ kubernetes_version }}/deb/ /"
        state: present

    - name: Install Kubernetes components
      apt:
        name:
          - kubelet
          - kubeadm
          - kubectl
        state: present
        update_cache: yes

    - name: Hold Kubernetes packages
      dpkg_selections:
        name: "{{ item }}"
        selection: hold
      loop:
        - kubelet
        - kubeadm
        - kubectl

    - name: Initialize Kubernetes cluster
      command: "kubeadm init --apiserver-advertise-address={{ ansible_default_ipv4.address }} --apiserver-cert-extra-sans={{ public_ip }}"
      args:
        creates: /etc/kubernetes/admin.conf

    - name: Set kubeconfig for user
      file:
        path: "/home/{{ vm_user }}/.kube"
        owner: "{{ vm_user }}"
        group: "{{ vm_user }}"
        state: directory
        mode: '0755'

    - name: Patch admin.conf to use Elastic IP
      lineinfile:
        path: /etc/kubernetes/admin.conf
        regexp: '^    server: https://'
        line: "    server: https://{{ public_ip }}:6443"

    - name: Copy kubeconfig to user's home
      copy:
        src: /etc/kubernetes/admin.conf
        dest: "/home/{{ vm_user }}/.kube/config"
        owner: "{{ vm_user }}"
        group: "{{ vm_user }}"
        mode: '0644'
        remote_src: true

    - name: Install Calico network plugin
      become: false
      command: kubectl apply -f https://raw.githubusercontent.com/projectcalico/calico/v3.26.1/manifests/calico.yaml

    - name: Untaint nodes
      become: false
      command: kubectl taint nodes --all node-role.kubernetes.io/control-plane:NoSchedule-